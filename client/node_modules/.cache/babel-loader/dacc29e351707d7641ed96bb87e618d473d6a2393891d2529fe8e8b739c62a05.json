{"ast":null,"code":"import { notifyManager } from \"./notifyManager.mjs\";\nimport { Mutation } from \"./mutation.mjs\";\nimport { matchMutation, noop } from \"./utils.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\"; // TYPES\n\n// CLASS\nexport class MutationCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined,\n      meta: options.meta\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n  getAll() {\n    return this.mutations;\n  }\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n    return this.mutations.find(mutation => matchMutation(filters, mutation));\n  }\n  findAll(filters) {\n    return this.mutations.filter(mutation => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n    return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n  }\n}","map":{"version":3,"names":["notifyManager","Mutation","matchMutation","noop","Subscribable","MutationCache","constructor","config","mutations","mutationId","build","client","options","state","mutation","mutationCache","logger","getLogger","defaultMutationOptions","defaultOptions","mutationKey","getMutationDefaults","undefined","meta","add","push","notify","type","remove","filter","x","clear","batch","forEach","getAll","find","filters","exact","findAll","event","listeners","listener","resumePausedMutations","pausedMutations","isPaused","reduce","promise","then","continue","catch","Promise","resolve"],"sources":["C:/Users/chich/Project/client/node_modules/react-query/lib/core/mutationCache.mjs"],"sourcesContent":["import { notifyManager } from \"./notifyManager.mjs\";\nimport { Mutation } from \"./mutation.mjs\";\nimport { matchMutation, noop } from \"./utils.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\"; // TYPES\n\n// CLASS\nexport class MutationCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined,\n      meta: options.meta\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => matchMutation(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => matchMutation(filters, mutation));\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n    return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n  }\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}