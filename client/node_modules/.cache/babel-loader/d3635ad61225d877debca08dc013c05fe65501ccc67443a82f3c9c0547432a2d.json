{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chich\\\\Project\\\\client\\\\src\\\\components\\\\posts\\\\Posts.jsx\";\nimport React from \"react\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport Post from \"../post/Post\";\nimport \"./posts.scss\";\nimport { makeRequest } from \"../../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nconst mutation = useMutation(newPost => makeRequest.post(\"/posts\", newPost), {\n  onSuccess: () => {\n    queryClient.invalidateQueries([\"posts\", userId]);\n  }\n});\nconst addNewPost = async newPostData => {\n  try {\n    await mutation.mutateAsync(newPostData);\n  } catch (error) {\n    console.error(\"Error adding new post:\", error);\n  }\n};\nconst PostsWrapper = ({\n  userId\n}) => /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n  client: queryClient,\n  children: /*#__PURE__*/_jsxDEV(Posts, {\n    userId: userId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this);\n_c = PostsWrapper;\nexport default PostsWrapper;\nvar _c;\n$RefreshReg$(_c, \"PostsWrapper\");","map":{"version":3,"names":["React","QueryClient","QueryClientProvider","useQuery","Post","makeRequest","jsxDEV","_jsxDEV","queryClient","mutation","useMutation","newPost","post","onSuccess","invalidateQueries","userId","addNewPost","newPostData","mutateAsync","error","console","PostsWrapper","client","children","Posts","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chich/Project/client/src/components/posts/Posts.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\r\nimport Post from \"../post/Post\";\r\nimport \"./posts.scss\";\r\nimport { makeRequest } from \"../../axios\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst mutation = useMutation((newPost) => makeRequest.post(\"/posts\", newPost), {\r\n  onSuccess: () => {\r\n    queryClient.invalidateQueries([\"posts\", userId]);\r\n  },\r\n});\r\n\r\nconst addNewPost = async (newPostData) => {\r\n  try {\r\n    await mutation.mutateAsync(newPostData);\r\n  } catch (error) {\r\n    console.error(\"Error adding new post:\", error);\r\n  }\r\n};\r\n\r\n\r\nconst PostsWrapper = ({ userId }) => (\r\n  <QueryClientProvider client={queryClient}>\r\n    <Posts userId={userId} />\r\n  </QueryClientProvider>\r\n);\r\n\r\nexport default PostsWrapper;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,QAAQ,QAAQ,aAAa;AACxE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,cAAc;AACrB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAG,IAAIP,WAAW,CAAC,CAAC;AAErC,MAAMQ,QAAQ,GAAGC,WAAW,CAAEC,OAAO,IAAKN,WAAW,CAACO,IAAI,CAAC,QAAQ,EAAED,OAAO,CAAC,EAAE;EAC7EE,SAAS,EAAEA,CAAA,KAAM;IACfL,WAAW,CAACM,iBAAiB,CAAC,CAAC,OAAO,EAAEC,MAAM,CAAC,CAAC;EAClD;AACF,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAG,MAAOC,WAAW,IAAK;EACxC,IAAI;IACF,MAAMR,QAAQ,CAACS,WAAW,CAACD,WAAW,CAAC;EACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAChD;AACF,CAAC;AAGD,MAAME,YAAY,GAAGA,CAAC;EAAEN;AAAO,CAAC,kBAC9BR,OAAA,CAACL,mBAAmB;EAACoB,MAAM,EAAEd,WAAY;EAAAe,QAAA,eACvChB,OAAA,CAACiB,KAAK;IAACT,MAAM,EAAEA;EAAO;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACN,CACtB;AAACC,EAAA,GAJIR,YAAY;AAMlB,eAAeA,YAAY;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}